name: Daily Football Predictions

on:
  schedule:
    - cron: '0 6 * * *'  # 6 AM UTC daily
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write  # Allow workflow to push changes

jobs:
  generate-predictions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        persist-credentials: true
        fetch-depth: 0  # Fetch full history
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Step 1 - Fetch Today's Matches
      run: python today_matches.py
        
    - name: Step 2 - Extract Features
      run: python fetch_data.py
        
    - name: Step 3 - Generate Predictions
      run: python predict.py
        
    - name: Commit and push results
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Pull latest changes to avoid conflicts
        echo "üì• Pulling latest changes..."
        git pull origin main --rebase || git pull origin master --rebase || echo "No remote changes"
        
        # Add generated CSV files
        git add -f live.csv extracted_features_complete.csv best_match_predictions.csv 2>/dev/null || true
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "‚úÖ No new changes to commit - predictions are up to date"
        else
          git commit -m "ü§ñ Auto-update predictions - $(date +'%Y-%m-%d %H:%M:%S UTC')"
          
          # Push with retry
          echo "üì§ Pushing changes..."
          for i in {1..3}; do
            if git push origin HEAD:main 2>/dev/null || git push origin HEAD:master 2>/dev/null; then
              echo "‚úÖ Predictions updated successfully"
              exit 0
            else
              echo "‚ö†Ô∏è Push attempt $i/3 failed, pulling and retrying..."
              git pull origin main --rebase 2>/dev/null || git pull origin master --rebase 2>/dev/null
              sleep 2
            fi
          done
          
          echo "‚ùå Failed to push after 3 attempts"
          exit 1
        fi
