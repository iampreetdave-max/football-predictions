name: Daily Football Predictions - Enhanced

on:
  schedule:
    # Run every day at 6:00 AM UTC
    # Adjust the cron schedule for your timezone
    - cron: '0 6 * * *'
    
  # Allow manual triggering from GitHub Actions tab
  workflow_dispatch:

# Prevent concurrent runs from conflicting
concurrency:
  group: predictions-workflow
  cancel-in-progress: false

jobs:
  generate-predictions:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # Fetch full git history for proper rebasing
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Step 1 - Fetch Today's Matches
      env:
        FOOTYSTATS_API_KEY: ${{ secrets.FOOTYSTATS_API_KEY }}
      run: python today_matches.py
      continue-on-error: false
        
    - name: Step 2 - Extract Features
      env:
        FOOTBALL_DATA_API_KEY: ${{ secrets.FOOTBALL_DATA_API_KEY }}
      run: python fetch_data.py
      continue-on-error: false
        
    - name: Step 3 - Generate Predictions
      run: python predict.py
      continue-on-error: false
        
    - name: Commit and push results
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # Pull latest changes first with rebase strategy to avoid conflicts
        echo "üîÑ Pulling latest changes..."
        git pull --rebase origin main || git pull --rebase origin master || echo "Already up to date"
        
        # Add generated CSV files
        git add -f live.csv extracted_features_complete.csv best_match_predictions.csv 2>/dev/null || true
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "‚ÑπÔ∏è  No changes to commit"
        else
          echo "‚úÖ Changes detected, committing..."
          git commit -m "ü§ñ Auto-update predictions - $(date +'%Y-%m-%d %H:%M:%S UTC')"
          
          # Push with retry logic to handle race conditions
          max_retries=3
          retry_count=0
          
          until [ $retry_count -ge $max_retries ]
          do
            echo "üì§ Attempting to push (attempt $((retry_count+1))/$max_retries)..."
            
            if git push; then
              echo "‚úÖ Successfully pushed predictions!"
              break
            fi
            
            retry_count=$((retry_count+1))
            
            if [ $retry_count -lt $max_retries ]; then
              echo "‚ö†Ô∏è  Push failed, retrying in 5 seconds..."
              git pull --rebase origin main || git pull --rebase origin master
              sleep 5
            fi
          done
          
          if [ $retry_count -ge $max_retries ]; then
            echo "‚ùå Failed to push after $max_retries attempts"
            exit 1
          fi
        fi
    
    # Optional: Add notification on failure
    # Uncomment below if you want to be notified of failures
    # - name: Notify on failure
    #   if: failure()
    #   run: |
    #     echo "‚ùå Workflow failed! Check the logs at: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
